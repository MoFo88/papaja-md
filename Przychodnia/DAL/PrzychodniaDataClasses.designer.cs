#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="yasio1_przychodniaDb")]
	public partial class PrzychodniaDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKod_jednostki(Kod_jednostki instance);
    partial void UpdateKod_jednostki(Kod_jednostki instance);
    partial void DeleteKod_jednostki(Kod_jednostki instance);
    partial void InsertRejestracja(Rejestracja instance);
    partial void UpdateRejestracja(Rejestracja instance);
    partial void DeleteRejestracja(Rejestracja instance);
    partial void InsertTyp_rejestracja(Typ_rejestracja instance);
    partial void UpdateTyp_rejestracja(Typ_rejestracja instance);
    partial void DeleteTyp_rejestracja(Typ_rejestracja instance);
    partial void InsertWpis_kartotera(Wpis_kartotera instance);
    partial void UpdateWpis_kartotera(Wpis_kartotera instance);
    partial void DeleteWpis_kartotera(Wpis_kartotera instance);
    partial void InsertSpecjalizacja(Specjalizacja instance);
    partial void UpdateSpecjalizacja(Specjalizacja instance);
    partial void DeleteSpecjalizacja(Specjalizacja instance);
    partial void InsertSpecjalizacja_Lekarz(Specjalizacja_Lekarz instance);
    partial void UpdateSpecjalizacja_Lekarz(Specjalizacja_Lekarz instance);
    partial void DeleteSpecjalizacja_Lekarz(Specjalizacja_Lekarz instance);
    partial void InsertUzytkownik(Uzytkownik instance);
    partial void UpdateUzytkownik(Uzytkownik instance);
    partial void DeleteUzytkownik(Uzytkownik instance);
    #endregion
		
		public PrzychodniaDataClassesDataContext() : 
				base(global::DAL.Properties.Settings.Default.yasio1_przychodniaDbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PrzychodniaDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrzychodniaDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrzychodniaDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrzychodniaDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Kod_jednostki> Kod_jednostkis
		{
			get
			{
				return this.GetTable<Kod_jednostki>();
			}
		}
		
		public System.Data.Linq.Table<Rejestracja> Rejestracjas
		{
			get
			{
				return this.GetTable<Rejestracja>();
			}
		}
		
		public System.Data.Linq.Table<Typ_rejestracja> Typ_rejestracjas
		{
			get
			{
				return this.GetTable<Typ_rejestracja>();
			}
		}
		
		public System.Data.Linq.Table<Wpis_kartotera> Wpis_kartoteras
		{
			get
			{
				return this.GetTable<Wpis_kartotera>();
			}
		}
		
		public System.Data.Linq.Table<Specjalizacja> Specjalizacjas
		{
			get
			{
				return this.GetTable<Specjalizacja>();
			}
		}
		
		public System.Data.Linq.Table<Specjalizacja_Lekarz> Specjalizacja_Lekarzs
		{
			get
			{
				return this.GetTable<Specjalizacja_Lekarz>();
			}
		}
		
		public System.Data.Linq.Table<Uzytkownik> Uzytkowniks
		{
			get
			{
				return this.GetTable<Uzytkownik>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kod_jednostki")]
	public partial class Kod_jednostki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _kod;
		
		private string _nazwa;
		
		private string _grupa;
		
		private string _podgrupa;
		
		private EntitySet<Wpis_kartotera> _Wpis_kartoteras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnkodChanging(string value);
    partial void OnkodChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OngrupaChanging(string value);
    partial void OngrupaChanged();
    partial void OnpodgrupaChanging(string value);
    partial void OnpodgrupaChanged();
    #endregion
		
		public Kod_jednostki()
		{
			this._Wpis_kartoteras = new EntitySet<Wpis_kartotera>(new Action<Wpis_kartotera>(this.attach_Wpis_kartoteras), new Action<Wpis_kartotera>(this.detach_Wpis_kartoteras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kod", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string kod
		{
			get
			{
				return this._kod;
			}
			set
			{
				if ((this._kod != value))
				{
					this.OnkodChanging(value);
					this.SendPropertyChanging();
					this._kod = value;
					this.SendPropertyChanged("kod");
					this.OnkodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grupa", DbType="VarChar(150)")]
		public string grupa
		{
			get
			{
				return this._grupa;
			}
			set
			{
				if ((this._grupa != value))
				{
					this.OngrupaChanging(value);
					this.SendPropertyChanging();
					this._grupa = value;
					this.SendPropertyChanged("grupa");
					this.OngrupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_podgrupa", DbType="VarChar(150)")]
		public string podgrupa
		{
			get
			{
				return this._podgrupa;
			}
			set
			{
				if ((this._podgrupa != value))
				{
					this.OnpodgrupaChanging(value);
					this.SendPropertyChanging();
					this._podgrupa = value;
					this.SendPropertyChanged("podgrupa");
					this.OnpodgrupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kod_jednostki_Wpis_kartotera", Storage="_Wpis_kartoteras", ThisKey="id", OtherKey="id_kod_jedn")]
		public EntitySet<Wpis_kartotera> Wpis_kartoteras
		{
			get
			{
				return this._Wpis_kartoteras;
			}
			set
			{
				this._Wpis_kartoteras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wpis_kartoteras(Wpis_kartotera entity)
		{
			this.SendPropertyChanging();
			entity.Kod_jednostki = this;
		}
		
		private void detach_Wpis_kartoteras(Wpis_kartotera entity)
		{
			this.SendPropertyChanging();
			entity.Kod_jednostki = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rejestracja")]
	public partial class Rejestracja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_pacj;
		
		private int _id_typ;
		
		private System.DateTime _data_od;
		
		private System.DateTime _data_do;
		
		private EntityRef<Typ_rejestracja> _Typ_rejestracja;
		
		private EntityRef<Uzytkownik> _Uzytkownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_pacjChanging(int value);
    partial void Onid_pacjChanged();
    partial void Onid_typChanging(int value);
    partial void Onid_typChanged();
    partial void Ondata_odChanging(System.DateTime value);
    partial void Ondata_odChanged();
    partial void Ondata_doChanging(System.DateTime value);
    partial void Ondata_doChanged();
    #endregion
		
		public Rejestracja()
		{
			this._Typ_rejestracja = default(EntityRef<Typ_rejestracja>);
			this._Uzytkownik = default(EntityRef<Uzytkownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pacj", DbType="Int NOT NULL")]
		public int id_pacj
		{
			get
			{
				return this._id_pacj;
			}
			set
			{
				if ((this._id_pacj != value))
				{
					if (this._Uzytkownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pacjChanging(value);
					this.SendPropertyChanging();
					this._id_pacj = value;
					this.SendPropertyChanged("id_pacj");
					this.Onid_pacjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_typ", DbType="Int NOT NULL")]
		public int id_typ
		{
			get
			{
				return this._id_typ;
			}
			set
			{
				if ((this._id_typ != value))
				{
					if (this._Typ_rejestracja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_typChanging(value);
					this.SendPropertyChanging();
					this._id_typ = value;
					this.SendPropertyChanged("id_typ");
					this.Onid_typChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_od", DbType="SmallDateTime NOT NULL")]
		public System.DateTime data_od
		{
			get
			{
				return this._data_od;
			}
			set
			{
				if ((this._data_od != value))
				{
					this.Ondata_odChanging(value);
					this.SendPropertyChanging();
					this._data_od = value;
					this.SendPropertyChanged("data_od");
					this.Ondata_odChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_do", DbType="SmallDateTime NOT NULL")]
		public System.DateTime data_do
		{
			get
			{
				return this._data_do;
			}
			set
			{
				if ((this._data_do != value))
				{
					this.Ondata_doChanging(value);
					this.SendPropertyChanging();
					this._data_do = value;
					this.SendPropertyChanged("data_do");
					this.Ondata_doChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_rejestracja_Rejestracja", Storage="_Typ_rejestracja", ThisKey="id_typ", OtherKey="id", IsForeignKey=true)]
		public Typ_rejestracja Typ_rejestracja
		{
			get
			{
				return this._Typ_rejestracja.Entity;
			}
			set
			{
				Typ_rejestracja previousValue = this._Typ_rejestracja.Entity;
				if (((previousValue != value) 
							|| (this._Typ_rejestracja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Typ_rejestracja.Entity = null;
						previousValue.Rejestracjas.Remove(this);
					}
					this._Typ_rejestracja.Entity = value;
					if ((value != null))
					{
						value.Rejestracjas.Add(this);
						this._id_typ = value.id;
					}
					else
					{
						this._id_typ = default(int);
					}
					this.SendPropertyChanged("Typ_rejestracja");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Rejestracja", Storage="_Uzytkownik", ThisKey="id_pacj", OtherKey="id", IsForeignKey=true)]
		public Uzytkownik Uzytkownik
		{
			get
			{
				return this._Uzytkownik.Entity;
			}
			set
			{
				Uzytkownik previousValue = this._Uzytkownik.Entity;
				if (((previousValue != value) 
							|| (this._Uzytkownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uzytkownik.Entity = null;
						previousValue.Rejestracjas.Remove(this);
					}
					this._Uzytkownik.Entity = value;
					if ((value != null))
					{
						value.Rejestracjas.Add(this);
						this._id_pacj = value.id;
					}
					else
					{
						this._id_pacj = default(int);
					}
					this.SendPropertyChanged("Uzytkownik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Typ_rejestracja")]
	public partial class Typ_rejestracja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nazwa;
		
		private EntitySet<Rejestracja> _Rejestracjas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    #endregion
		
		public Typ_rejestracja()
		{
			this._Rejestracjas = new EntitySet<Rejestracja>(new Action<Rejestracja>(this.attach_Rejestracjas), new Action<Rejestracja>(this.detach_Rejestracjas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_rejestracja_Rejestracja", Storage="_Rejestracjas", ThisKey="id", OtherKey="id_typ")]
		public EntitySet<Rejestracja> Rejestracjas
		{
			get
			{
				return this._Rejestracjas;
			}
			set
			{
				this._Rejestracjas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rejestracjas(Rejestracja entity)
		{
			this.SendPropertyChanging();
			entity.Typ_rejestracja = this;
		}
		
		private void detach_Rejestracjas(Rejestracja entity)
		{
			this.SendPropertyChanging();
			entity.Typ_rejestracja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wpis_kartotera")]
	public partial class Wpis_kartotera : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_pacj;
		
		private int _id_kod_jedn;
		
		private string _wywiad_badania;
		
		private string _recetpy;
		
		private string _skierowania;
		
		private string _zalecenie;
		
		private EntityRef<Kod_jednostki> _Kod_jednostki;
		
		private EntityRef<Uzytkownik> _Uzytkownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_pacjChanging(int value);
    partial void Onid_pacjChanged();
    partial void Onid_kod_jednChanging(int value);
    partial void Onid_kod_jednChanged();
    partial void Onwywiad_badaniaChanging(string value);
    partial void Onwywiad_badaniaChanged();
    partial void OnrecetpyChanging(string value);
    partial void OnrecetpyChanged();
    partial void OnskierowaniaChanging(string value);
    partial void OnskierowaniaChanged();
    partial void OnzalecenieChanging(string value);
    partial void OnzalecenieChanged();
    #endregion
		
		public Wpis_kartotera()
		{
			this._Kod_jednostki = default(EntityRef<Kod_jednostki>);
			this._Uzytkownik = default(EntityRef<Uzytkownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pacj", DbType="Int NOT NULL")]
		public int id_pacj
		{
			get
			{
				return this._id_pacj;
			}
			set
			{
				if ((this._id_pacj != value))
				{
					if (this._Uzytkownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pacjChanging(value);
					this.SendPropertyChanging();
					this._id_pacj = value;
					this.SendPropertyChanged("id_pacj");
					this.Onid_pacjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kod_jedn", DbType="Int NOT NULL")]
		public int id_kod_jedn
		{
			get
			{
				return this._id_kod_jedn;
			}
			set
			{
				if ((this._id_kod_jedn != value))
				{
					if (this._Kod_jednostki.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_kod_jednChanging(value);
					this.SendPropertyChanging();
					this._id_kod_jedn = value;
					this.SendPropertyChanged("id_kod_jedn");
					this.Onid_kod_jednChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wywiad_badania", DbType="VarChar(MAX)")]
		public string wywiad_badania
		{
			get
			{
				return this._wywiad_badania;
			}
			set
			{
				if ((this._wywiad_badania != value))
				{
					this.Onwywiad_badaniaChanging(value);
					this.SendPropertyChanging();
					this._wywiad_badania = value;
					this.SendPropertyChanged("wywiad_badania");
					this.Onwywiad_badaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recetpy", DbType="VarChar(MAX)")]
		public string recetpy
		{
			get
			{
				return this._recetpy;
			}
			set
			{
				if ((this._recetpy != value))
				{
					this.OnrecetpyChanging(value);
					this.SendPropertyChanging();
					this._recetpy = value;
					this.SendPropertyChanged("recetpy");
					this.OnrecetpyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skierowania", DbType="VarChar(MAX)")]
		public string skierowania
		{
			get
			{
				return this._skierowania;
			}
			set
			{
				if ((this._skierowania != value))
				{
					this.OnskierowaniaChanging(value);
					this.SendPropertyChanging();
					this._skierowania = value;
					this.SendPropertyChanged("skierowania");
					this.OnskierowaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zalecenie", DbType="VarChar(MAX)")]
		public string zalecenie
		{
			get
			{
				return this._zalecenie;
			}
			set
			{
				if ((this._zalecenie != value))
				{
					this.OnzalecenieChanging(value);
					this.SendPropertyChanging();
					this._zalecenie = value;
					this.SendPropertyChanged("zalecenie");
					this.OnzalecenieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kod_jednostki_Wpis_kartotera", Storage="_Kod_jednostki", ThisKey="id_kod_jedn", OtherKey="id", IsForeignKey=true)]
		public Kod_jednostki Kod_jednostki
		{
			get
			{
				return this._Kod_jednostki.Entity;
			}
			set
			{
				Kod_jednostki previousValue = this._Kod_jednostki.Entity;
				if (((previousValue != value) 
							|| (this._Kod_jednostki.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kod_jednostki.Entity = null;
						previousValue.Wpis_kartoteras.Remove(this);
					}
					this._Kod_jednostki.Entity = value;
					if ((value != null))
					{
						value.Wpis_kartoteras.Add(this);
						this._id_kod_jedn = value.id;
					}
					else
					{
						this._id_kod_jedn = default(int);
					}
					this.SendPropertyChanged("Kod_jednostki");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Wpis_kartotera", Storage="_Uzytkownik", ThisKey="id_pacj", OtherKey="id", IsForeignKey=true)]
		public Uzytkownik Uzytkownik
		{
			get
			{
				return this._Uzytkownik.Entity;
			}
			set
			{
				Uzytkownik previousValue = this._Uzytkownik.Entity;
				if (((previousValue != value) 
							|| (this._Uzytkownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uzytkownik.Entity = null;
						previousValue.Wpis_kartoteras.Remove(this);
					}
					this._Uzytkownik.Entity = value;
					if ((value != null))
					{
						value.Wpis_kartoteras.Add(this);
						this._id_pacj = value.id;
					}
					else
					{
						this._id_pacj = default(int);
					}
					this.SendPropertyChanged("Uzytkownik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="yasio1_superuser.Specjalizacja")]
	public partial class Specjalizacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nazwa;
		
		private EntitySet<Specjalizacja_Lekarz> _Specjalizacja_Lekarzs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    #endregion
		
		public Specjalizacja()
		{
			this._Specjalizacja_Lekarzs = new EntitySet<Specjalizacja_Lekarz>(new Action<Specjalizacja_Lekarz>(this.attach_Specjalizacja_Lekarzs), new Action<Specjalizacja_Lekarz>(this.detach_Specjalizacja_Lekarzs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specjalizacja_Specjalizacja_Lekarz", Storage="_Specjalizacja_Lekarzs", ThisKey="id", OtherKey="idSpecjalizacja")]
		public EntitySet<Specjalizacja_Lekarz> Specjalizacja_Lekarzs
		{
			get
			{
				return this._Specjalizacja_Lekarzs;
			}
			set
			{
				this._Specjalizacja_Lekarzs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Specjalizacja_Lekarzs(Specjalizacja_Lekarz entity)
		{
			this.SendPropertyChanging();
			entity.Specjalizacja = this;
		}
		
		private void detach_Specjalizacja_Lekarzs(Specjalizacja_Lekarz entity)
		{
			this.SendPropertyChanging();
			entity.Specjalizacja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="yasio1_superuser.Specjalizacja_Lekarz")]
	public partial class Specjalizacja_Lekarz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUzytkownik;
		
		private int _idSpecjalizacja;
		
		private int _id;
		
		private EntityRef<Specjalizacja> _Specjalizacja;
		
		private EntityRef<Uzytkownik> _Uzytkownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUzytkownikChanging(int value);
    partial void OnidUzytkownikChanged();
    partial void OnidSpecjalizacjaChanging(int value);
    partial void OnidSpecjalizacjaChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public Specjalizacja_Lekarz()
		{
			this._Specjalizacja = default(EntityRef<Specjalizacja>);
			this._Uzytkownik = default(EntityRef<Uzytkownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUzytkownik", DbType="Int NOT NULL")]
		public int idUzytkownik
		{
			get
			{
				return this._idUzytkownik;
			}
			set
			{
				if ((this._idUzytkownik != value))
				{
					if (this._Uzytkownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUzytkownikChanging(value);
					this.SendPropertyChanging();
					this._idUzytkownik = value;
					this.SendPropertyChanged("idUzytkownik");
					this.OnidUzytkownikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSpecjalizacja", DbType="Int NOT NULL")]
		public int idSpecjalizacja
		{
			get
			{
				return this._idSpecjalizacja;
			}
			set
			{
				if ((this._idSpecjalizacja != value))
				{
					if (this._Specjalizacja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSpecjalizacjaChanging(value);
					this.SendPropertyChanging();
					this._idSpecjalizacja = value;
					this.SendPropertyChanged("idSpecjalizacja");
					this.OnidSpecjalizacjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Specjalizacja_Specjalizacja_Lekarz", Storage="_Specjalizacja", ThisKey="idSpecjalizacja", OtherKey="id", IsForeignKey=true)]
		public Specjalizacja Specjalizacja
		{
			get
			{
				return this._Specjalizacja.Entity;
			}
			set
			{
				Specjalizacja previousValue = this._Specjalizacja.Entity;
				if (((previousValue != value) 
							|| (this._Specjalizacja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Specjalizacja.Entity = null;
						previousValue.Specjalizacja_Lekarzs.Remove(this);
					}
					this._Specjalizacja.Entity = value;
					if ((value != null))
					{
						value.Specjalizacja_Lekarzs.Add(this);
						this._idSpecjalizacja = value.id;
					}
					else
					{
						this._idSpecjalizacja = default(int);
					}
					this.SendPropertyChanged("Specjalizacja");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Specjalizacja_Lekarz", Storage="_Uzytkownik", ThisKey="idUzytkownik", OtherKey="id", IsForeignKey=true)]
		public Uzytkownik Uzytkownik
		{
			get
			{
				return this._Uzytkownik.Entity;
			}
			set
			{
				Uzytkownik previousValue = this._Uzytkownik.Entity;
				if (((previousValue != value) 
							|| (this._Uzytkownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uzytkownik.Entity = null;
						previousValue.Specjalizacja_Lekarzs.Remove(this);
					}
					this._Uzytkownik.Entity = value;
					if ((value != null))
					{
						value.Specjalizacja_Lekarzs.Add(this);
						this._idUzytkownik = value.id;
					}
					else
					{
						this._idUzytkownik = default(int);
					}
					this.SendPropertyChanged("Uzytkownik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uzytkownik")]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="0", Type=typeof(Uzytkownik), IsDefault=true)]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="3", Type=typeof(Administrator))]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="1", Type=typeof(Lekarz))]
	[global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code="2", Type=typeof(Pacjent))]
	public partial class Uzytkownik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _imie;
		
		private string _nazwisko;
		
		private System.Nullable<decimal> _pesel;
		
		private int _id_typ;
		
		private string _kod_pocztowy;
		
		private string _miasto;
		
		private string _ulica;
		
		private string _nr_domu;
		
		private string _telefon;
		
		private string _password;
		
		private string _login;
		
		private EntitySet<Rejestracja> _Rejestracjas;
		
		private EntitySet<Wpis_kartotera> _Wpis_kartoteras;
		
		private EntitySet<Specjalizacja_Lekarz> _Specjalizacja_Lekarzs;
		
		private EntitySet<Pacjent> _Pacjents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnimieChanging(string value);
    partial void OnimieChanged();
    partial void OnnazwiskoChanging(string value);
    partial void OnnazwiskoChanged();
    partial void OnpeselChanging(System.Nullable<decimal> value);
    partial void OnpeselChanged();
    partial void Onid_typChanging(int value);
    partial void Onid_typChanged();
    partial void Onkod_pocztowyChanging(string value);
    partial void Onkod_pocztowyChanged();
    partial void OnmiastoChanging(string value);
    partial void OnmiastoChanged();
    partial void OnulicaChanging(string value);
    partial void OnulicaChanged();
    partial void Onnr_domuChanging(string value);
    partial void Onnr_domuChanged();
    partial void OntelefonChanging(string value);
    partial void OntelefonChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    #endregion
		
		public Uzytkownik()
		{
			this._Rejestracjas = new EntitySet<Rejestracja>(new Action<Rejestracja>(this.attach_Rejestracjas), new Action<Rejestracja>(this.detach_Rejestracjas));
			this._Wpis_kartoteras = new EntitySet<Wpis_kartotera>(new Action<Wpis_kartotera>(this.attach_Wpis_kartoteras), new Action<Wpis_kartotera>(this.detach_Wpis_kartoteras));
			this._Specjalizacja_Lekarzs = new EntitySet<Specjalizacja_Lekarz>(new Action<Specjalizacja_Lekarz>(this.attach_Specjalizacja_Lekarzs), new Action<Specjalizacja_Lekarz>(this.detach_Specjalizacja_Lekarzs));
			this._Pacjents = new EntitySet<Pacjent>(new Action<Pacjent>(this.attach_Pacjents), new Action<Pacjent>(this.detach_Pacjents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string imie
		{
			get
			{
				return this._imie;
			}
			set
			{
				if ((this._imie != value))
				{
					this.OnimieChanging(value);
					this.SendPropertyChanging();
					this._imie = value;
					this.SendPropertyChanged("imie");
					this.OnimieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwisko", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nazwisko
		{
			get
			{
				return this._nazwisko;
			}
			set
			{
				if ((this._nazwisko != value))
				{
					this.OnnazwiskoChanging(value);
					this.SendPropertyChanging();
					this._nazwisko = value;
					this.SendPropertyChanged("nazwisko");
					this.OnnazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pesel", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> pesel
		{
			get
			{
				return this._pesel;
			}
			set
			{
				if ((this._pesel != value))
				{
					this.OnpeselChanging(value);
					this.SendPropertyChanging();
					this._pesel = value;
					this.SendPropertyChanged("pesel");
					this.OnpeselChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_typ", DbType="Int NOT NULL", IsDiscriminator=true)]
		public int id_typ
		{
			get
			{
				return this._id_typ;
			}
			set
			{
				if ((this._id_typ != value))
				{
					this.Onid_typChanging(value);
					this.SendPropertyChanging();
					this._id_typ = value;
					this.SendPropertyChanged("id_typ");
					this.Onid_typChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kod_pocztowy", DbType="Char(6)")]
		public string kod_pocztowy
		{
			get
			{
				return this._kod_pocztowy;
			}
			set
			{
				if ((this._kod_pocztowy != value))
				{
					this.Onkod_pocztowyChanging(value);
					this.SendPropertyChanging();
					this._kod_pocztowy = value;
					this.SendPropertyChanged("kod_pocztowy");
					this.Onkod_pocztowyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miasto", DbType="VarChar(50)")]
		public string miasto
		{
			get
			{
				return this._miasto;
			}
			set
			{
				if ((this._miasto != value))
				{
					this.OnmiastoChanging(value);
					this.SendPropertyChanging();
					this._miasto = value;
					this.SendPropertyChanged("miasto");
					this.OnmiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ulica", DbType="VarChar(50)")]
		public string ulica
		{
			get
			{
				return this._ulica;
			}
			set
			{
				if ((this._ulica != value))
				{
					this.OnulicaChanging(value);
					this.SendPropertyChanging();
					this._ulica = value;
					this.SendPropertyChanged("ulica");
					this.OnulicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_domu", DbType="VarChar(10)")]
		public string nr_domu
		{
			get
			{
				return this._nr_domu;
			}
			set
			{
				if ((this._nr_domu != value))
				{
					this.Onnr_domuChanging(value);
					this.SendPropertyChanging();
					this._nr_domu = value;
					this.SendPropertyChanged("nr_domu");
					this.Onnr_domuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon", DbType="VarChar(50)")]
		public string telefon
		{
			get
			{
				return this._telefon;
			}
			set
			{
				if ((this._telefon != value))
				{
					this.OntelefonChanging(value);
					this.SendPropertyChanging();
					this._telefon = value;
					this.SendPropertyChanged("telefon");
					this.OntelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="Char(160)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Rejestracja", Storage="_Rejestracjas", ThisKey="id", OtherKey="id_pacj")]
		public EntitySet<Rejestracja> Rejestracjas
		{
			get
			{
				return this._Rejestracjas;
			}
			set
			{
				this._Rejestracjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Wpis_kartotera", Storage="_Wpis_kartoteras", ThisKey="id", OtherKey="id_pacj")]
		public EntitySet<Wpis_kartotera> Wpis_kartoteras
		{
			get
			{
				return this._Wpis_kartoteras;
			}
			set
			{
				this._Wpis_kartoteras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Specjalizacja_Lekarz", Storage="_Specjalizacja_Lekarzs", ThisKey="id", OtherKey="idUzytkownik")]
		public EntitySet<Specjalizacja_Lekarz> Specjalizacja_Lekarzs
		{
			get
			{
				return this._Specjalizacja_Lekarzs;
			}
			set
			{
				this._Specjalizacja_Lekarzs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Pacjent", Storage="_Pacjents", ThisKey="id", OtherKey="id_lek")]
		public EntitySet<Pacjent> Pacjents
		{
			get
			{
				return this._Pacjents;
			}
			set
			{
				this._Pacjents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rejestracjas(Rejestracja entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = this;
		}
		
		private void detach_Rejestracjas(Rejestracja entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = null;
		}
		
		private void attach_Wpis_kartoteras(Wpis_kartotera entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = this;
		}
		
		private void detach_Wpis_kartoteras(Wpis_kartotera entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = null;
		}
		
		private void attach_Specjalizacja_Lekarzs(Specjalizacja_Lekarz entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = this;
		}
		
		private void detach_Specjalizacja_Lekarzs(Specjalizacja_Lekarz entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = null;
		}
		
		private void attach_Pacjents(Pacjent entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = this;
		}
		
		private void detach_Pacjents(Pacjent entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = null;
		}
	}
	
	public partial class Administrator : Uzytkownik
	{
		
		private string _email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Administrator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
	}
	
	public partial class Lekarz : Uzytkownik
	{
		
		private string _email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Lekarz()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
	}
	
	public partial class Pacjent : Uzytkownik
	{
		
		private System.Nullable<int> _id_lek;
		
		private string _ubezpieczenie;
		
		private EntityRef<Uzytkownik> _Uzytkownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_lekChanging(System.Nullable<int> value);
    partial void Onid_lekChanged();
    partial void OnubezpieczenieChanging(string value);
    partial void OnubezpieczenieChanged();
    #endregion
		
		public Pacjent()
		{
			this._Uzytkownik = default(EntityRef<Uzytkownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lek", DbType="Int")]
		public System.Nullable<int> id_lek
		{
			get
			{
				return this._id_lek;
			}
			set
			{
				if ((this._id_lek != value))
				{
					if (this._Uzytkownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_lekChanging(value);
					this.SendPropertyChanging();
					this._id_lek = value;
					this.SendPropertyChanged("id_lek");
					this.Onid_lekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ubezpieczenie", DbType="VarChar(MAX)")]
		public string ubezpieczenie
		{
			get
			{
				return this._ubezpieczenie;
			}
			set
			{
				if ((this._ubezpieczenie != value))
				{
					this.OnubezpieczenieChanging(value);
					this.SendPropertyChanging();
					this._ubezpieczenie = value;
					this.SendPropertyChanged("ubezpieczenie");
					this.OnubezpieczenieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Pacjent", Storage="_Uzytkownik", ThisKey="id_lek", OtherKey="id", IsForeignKey=true)]
		public Uzytkownik Uzytkownik
		{
			get
			{
				return this._Uzytkownik.Entity;
			}
			set
			{
				Uzytkownik previousValue = this._Uzytkownik.Entity;
				if (((previousValue != value) 
							|| (this._Uzytkownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uzytkownik.Entity = null;
						previousValue.Pacjents.Remove(this);
					}
					this._Uzytkownik.Entity = value;
					if ((value != null))
					{
						value.Pacjents.Add(this);
						this._id_lek = value.id;
					}
					else
					{
						this._id_lek = default(Nullable<int>);
					}
					this.SendPropertyChanged("Uzytkownik");
				}
			}
		}
	}
}
#pragma warning restore 1591
